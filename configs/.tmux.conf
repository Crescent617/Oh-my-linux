# --------------------------------------------------- Tmux Config -----------------------------------------------------------
set-option -g default-shell /bin/bash
set-option -g mouse on

set -g history-limit 10000
set -g base-index 1      # 设置窗口的起始下标为1
set -g pane-base-index 1 # 设置面板的起始下标为1
set -s focus-events on

set-window-option -g automatic-rename on
set-window-option -g monitor-activity on

# # --------------------------------------------------- prefix -----------------------------------------------------------
# # 修改指令前缀
set -g prefix C-a
unbind C-b           # C-b 即 Ctrl+b 键，unbind 意味着解除绑定
bind C-a send-prefix # 绑定 Ctrl+a 为新的指令前缀
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"
bind X confirm-before -p "kill-window #W? (y/n)" kill-window
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# 从tmux v1.6版起，支持设置第二个指令前缀
# set-option -g prefix2 ` # 设置一个不常用的`键作为指令前缀，按键更快些

# # 添加载在配置文件指令为： r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded.."

# # --------------------------------------------------- 面板 -----------------------------------------------------------
unbind '"'
bind - splitw -v -c '#{pane_current_path}' # 垂直方向新增面板，默认进入当前目录
unbind %
bind = splitw -h -c '#{pane_current_path}' # 水平方向新增面板，默认进入当前目录

# pane border
# set-option -g pane-border-style fg=colour235 #fg=base02
# set-option -g pane-active-border-style fg=colour240 #fg=base01

# # --------------------------------------------------- vim 风格 -----------------------------------------------------------

set -g status-keys vi
set-window-option -g mode-keys vi
set-window-option -g mode-style "fg=default,bg=#43437C"

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
# bind -n M-Left select-pane -L
# bind -n M-Right select-pane -R
# bind -n M-Up select-pane -U
# bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left previous-window
bind -n S-Right next-window

# 复制模式更改为 vi 风格
# 进入复制模式 快捷键：prefix + [
if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'

# --------------------------------------------------- 状态栏 -----------------------------------------------------------
# set-window-option -g status-left " #S "
# set-window-option -g status-left-fg black
# set-window-option -g status-left-bg white

# set-window-option -g status-right " %H:%M %d-%b-%y "
# set-window-option -g status-right-fg black
# set-window-option -g status-right-bg white

# set-window-option -g window-status-format " #I: #W#F "
# set-window-option -g window-status-current-format " #I: #W#F "
# set-window-option -g window-status-current-fg green
# set-window-option -g window-status-current-bg black

# # --------------------------------------------------- plugins ----------------------------------------------------
# 将下面内容复制到`~/.tmux.conf`
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
set -g @plugin 'dracula/tmux'
set -g @dracula-show-weather false
set -g @dracula-show-network false

set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# ------------------------- finetune for theme -------------------------
set -g pane-active-border-style fg=magenta
set -g pane-border-style fg=blue
